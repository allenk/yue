// semver-compare@1.0.0
//
// This software is released under the MIT license:
//
// Permission is hereby granted, free of charge, to any person obtaining a copy of
// this software and associated documentation files (the "Software"), to deal in
// the Software without restriction, including without limitation the rights to
// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
// the Software, and to permit persons to whom the Software is furnished to do so,
// subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
!function(e){if("object"==typeof exports&&"undefined"!=typeof module)module.exports=e();else if("function"==typeof define&&define.amd)define([],e);else{("undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:this).semverCompare=e()}}((function(){return function e(r,n,t){function i(o,u){if(!n[o]){if(!r[o]){var d="function"==typeof require&&require;if(!u&&d)return d(o,!0);if(f)return f(o,!0);var s=new Error("Cannot find module '"+o+"'");throw s.code="MODULE_NOT_FOUND",s}var p=n[o]={exports:{}};r[o][0].call(p.exports,(function(e){return i(r[o][1][e]||e)}),p,p.exports,e,r,n,t)}return n[o].exports}for(var f="function"==typeof require&&require,o=0;o<t.length;o++)i(t[o]);return i}({1:[function(e,r,n){r.exports=function(e,r){for(var n=e.split("."),t=r.split("."),i=0;i<3;i++){var f=Number(n[i]),o=Number(t[i]);if(f>o)return 1;if(o>f)return-1;if(!isNaN(f)&&isNaN(o))return 1;if(isNaN(f)&&!isNaN(o))return-1}return 0}},{}]},{},[1])(1)}));